defmodule Wayfarer.Dsl.Targets do
  @moduledoc """
  A struct for storing a group of targets generated by the DSL.
  """

  alias Spark.Dsl.Entity
  alias Wayfarer.Dsl.Target

  defstruct algorithm: :round_robin, targets: []

  @type t :: %__MODULE__{algorithm: :round_robin | :sticky, targets: [Target.t()]}

  @doc false
  @spec init :: t
  def init, do: %__MODULE__{algorithm: :round_robin, targets: []}

  @doc false
  @spec entities :: [Entity.t()]
  def entities do
    [
      %Entity{
        name: :targets,
        target: __MODULE__,
        entities: [
          targets: Target.entities()
        ],
        imports: [IP.Sigil],
        schema: [
          algorithm: [
            type: {:in, [:round_robin, :sticky]},
            doc: "The target selection algorithm.",
            default: :round_robin
          ]
        ]
      }
    ]
  end
end
